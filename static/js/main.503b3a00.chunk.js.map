{"version":3,"sources":["styled/components/particials/StyledHeader.jsx","components/particials/Header.jsx","styled/components/particials/StyledFooter.jsx","components/particials/Footer.jsx","styled/components/ImageCard.jsx","components/ImageCard.jsx","api/httpRequests.js","models/comment.js","models/image.js","components/CommentForm.jsx","styled/components/CommentsList.jsx","components/CommentsList.jsx","styled/components/ImageModal.jsx","styled/components/CloseIcon.jsx","components/CloseIcon.jsx","components/ImageModal.jsx","pages/GalleryPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["StyledHeader","styled","header","Header","StyledFooter","footer","Footer","ImageCardImg","Image","ImageCard","url","showModal","src","onClick","alt","rounded","URL","getImages","a","fetch","response","json","console","error","getImageById","imgId","CommentModel","comment","this","id","text","date","ImageModel","image","comments","CommentForm","onAddComment","useState","name","setName","setText","handleChange","e","cb","target","value","Form","noValidate","onSubmit","event","preventDefault","length","Group","controlId","Control","type","placeholder","onChange","Button","variant","block","CommentListParagraph","p","CommentListTime","time","CommentListItem","ListGroup","Item","CommentListGroup","CommentsList","convertDate","Date","toLocaleDateString","split","join","map","ImageModalCol","Col","ImageModalDiv","div","CloseIconStyles","CloseIcon","onIconClick","ImageModal","onHide","show","imgData","setImgData","isLoading","setIsLoading","getImgInfo","then","data","Modal","size","aria-labelledby","onShow","centered","Body","Row","xs","md","Spinner","animation","role","className","fluid","newCommentWithDate","now","GalleryPage","imgList","setImgList","modalShow","setModalShow","setImgId","useEffect","Container","img","lg","xl","setModal","StyledDiv","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.503b3a00.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst StyledHeader = styled.header`\n  padding: 1rem;\n`;\n\n\nexport {StyledHeader};\n","import React from 'react';\nimport {StyledHeader} from '../../styled/components/particials/StyledHeader';\n\nconst Header = () => {\n  return (\n    <StyledHeader>\n      <h1>TEST APP</h1>\n    </StyledHeader>\n  );\n};\n\nHeader.propTypes = {};\n\nexport default Header;\n","import styled from 'styled-components';\n\nconst StyledFooter = styled.footer`\n  margin-top: auto;\n  padding: 1.5rem;\n  margin-left: 2rem;\n  margin-right: 2rem;\n  border-top: 1px lightgray solid;\n  color: lightgray;\n  font-size: 1.3rem;\n`;\n\nexport {\n  StyledFooter\n};\n","import React from 'react';\nimport {StyledFooter} from '../../styled/components/particials/StyledFooter';\n\n\nconst Footer = () => {\n  return (\n    <StyledFooter>\n      <small>&copy; 2018-2019</small>\n    </StyledFooter>\n  );\n};\n\nFooter.propTypes = {};\n\nexport default Footer;\n","import {Image} from 'react-bootstrap';\nimport styled from 'styled-components';\n\nconst ImageCardImg = styled(Image)`\n  margin: 2rem 0;\n  width: 100%;\n  background-color: red;\n`;\n\nexport {ImageCardImg};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {ImageCardImg} from '../styled/components/ImageCard';\n\n\nconst ImageCard = ({url, showModal}) => {\n  return (<ImageCardImg src={url} onClick={showModal} alt='photo' rounded/>);\n};\n\nImageCard.propTypes = {\n  url: PropTypes.string.isRequired,\n  showModal: PropTypes.func.isRequired,\n};\n\n\nexport default ImageCard;\n","const URL = 'https://boiling-refuge-66454.herokuapp.com';\n\nexport const getImages = async () => {\n  try {\n    const response = await fetch(`${URL}/images`);\n    return await response.json();\n  } catch (e) {\n    console.error(e);\n  }\n};\n\nexport const getImageById = async (imgId) => {\n  try {\n    const response = await fetch(`${URL}/images/${imgId}`);\n    return await response.json();\n  } catch (e) {\n    console.error(e);\n  }\n};\n\nexport const postComment = async (imgId, body) => {\n  try {\n    const body = JSON.stringify({name: 'VASYA', comment: '123ooop3212'});\n    const response = await fetch(`${URL}/images/${imgId}/comments`, {\n      method: 'POST',\n      body\n    });\n    return await response.json();\n  } catch (e) {\n    console.error(e);\n  }\n};\n\n\n","export default class CommentModel {\n  constructor(comment = {}) {\n    this.id = comment.id || null;\n    this.text = comment.text || '';\n    this.date = comment.date || null;\n  }\n}\n","import CommentModel from './comment';\n\nexport default class ImageModel {\n  constructor(image = {}) {\n    this.id = image.id || '';\n    this.url = image.url || '';\n    this.comments = image.comments || [new CommentModel({})];\n  }\n}\n\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {Button, Form} from 'react-bootstrap';\n\nconst CommentForm = ({onAddComment}) => {\n  const [name, setName] = useState('');\n  const [text, setText] = useState('');\n\n  const handleChange = (e, cb) => {\n    cb(e.target.value);\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    if (name.length <= 0 || text.length <= 0) {\n      return;\n    }\n\n    onAddComment({name, text});\n    setName('');\n    setText('');\n  };\n\n  return (\n    <Form noValidate onSubmit={(event) => onSubmit(event)}>\n      <Form.Group controlId=\"name\">\n        <Form.Control type=\"text\" placeholder=\"Ваше имя\" value={name} onChange={(e) => handleChange(e, setName)}/>\n      </Form.Group>\n      <Form.Group controlId=\"comment\">\n        <Form.Control type=\"text\" placeholder=\"Ваше комментарий\" value={text}\n                      onChange={(event) => handleChange(event, setText)}/>\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\" block>\n        Оставить комментарий\n      </Button>\n    </Form>\n  );\n};\n\nCommentForm.propTypes = {\n  onAddComment: PropTypes.func.isRequired\n};\n\nexport default CommentForm;\n","import styled from 'styled-components';\nimport {ListGroup} from 'react-bootstrap';\n\nconst CommentListParagraph = styled.p`\n  margin: 0;\n`;\nconst CommentListTime = styled.time`\n  color: gray;\n`;\n\nconst CommentListItem = styled(ListGroup.Item)`\n  border: none;\n  padding: 0 0 1rem 0;\n`;\n\nconst CommentListGroup = styled(ListGroup)`\n  overflow-y: scroll;\n  overflow-x: hidden;\n\n  ::-webkit-scrollbar {\n    width: 0px;\n    background: transparent;\n  }\n`;\n\nexport {CommentListParagraph, CommentListItem, CommentListGroup, CommentListTime};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  CommentListGroup,\n  CommentListItem,\n  CommentListParagraph,\n  CommentListTime\n} from '../styled/components/CommentsList';\n\nconst CommentsList = ({comments}) => {\n  const convertDate = (comment) => {\n    return new Date(comment.date).toLocaleDateString().split('/').join('.');\n  };\n\n  return (\n    <CommentListGroup>\n      {comments.map(comment => (\n        <CommentListItem key={comment.id}>\n          <CommentListParagraph>\n            <CommentListTime> {convertDate(comment)} </CommentListTime>\n          </CommentListParagraph>\n          <CommentListParagraph>{comment.text}</CommentListParagraph>\n        </CommentListItem>))}\n    </CommentListGroup>\n  );\n};\n\nCommentsList.propTypes = {\n  comments: PropTypes.arrayOf(PropTypes.shape({\n    date: PropTypes.number,\n    id: PropTypes.number,\n    text: PropTypes.string\n  })).isRequired\n};\n\nexport default CommentsList;\n","import {Col} from 'react-bootstrap';\nimport styled from 'styled-components';\n\nconst ImageModalCol = styled(Col)`\n  > * {\n    margin-bottom: 2rem;\n  }\n`;\n\nconst ImageModalDiv = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 18rem;\n  @media (max-width: 767px) {\n    margin: -1rem -1rem 1rem -1rem;\n  }\n`;\n\nexport {\n  ImageModalCol,\n  ImageModalDiv\n};\n","import styled from 'styled-components';\n\n\nconst CloseIconStyles = styled.div`\n  position: absolute;\n  right: 1rem;\n  top: 1rem;\n  width: 32px;\n  height: 32px;\n  z-index: 22;\n\n  :hover {\n    opacity: 1;\n    cursor: pointer;\n  }\n\n  :before, :after {\n    position: absolute;\n    left: 15px;\n    content: ' ';\n    height: 33px;\n    width: 2px;\n    background-color: #333;\n  }\n\n  :before {\n    transform: rotate(45deg);\n  }\n\n  :after {\n    transform: rotate(-45deg);\n  }\n`;\n\n\nexport {\n  CloseIconStyles\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {CloseIconStyles} from '../styled/components/CloseIcon';\n\nconst CloseIcon = ({onIconClick}) => {\n  return (\n    <CloseIconStyles onClick={onIconClick}/>\n  );\n};\n\nCloseIcon.propTypes = {\n  onIconClick: PropTypes.func\n};\n\nexport default CloseIcon;\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {Image, Modal, Row, Spinner} from 'react-bootstrap';\nimport {getImageById} from '../api/httpRequests';\nimport ImageModel from '../models/image';\nimport CommentForm from './CommentForm';\nimport CommentsList from './CommentsList';\nimport CommentModel from '../models/comment';\nimport {ImageModalCol, ImageModalDiv} from '../styled/components/ImageModal';\nimport CloseIcon from './CloseIcon';\n\nconst ImageModal = ({onHide, show, imgId}) => {\n  const [imgData, setImgData] = useState(new ImageModel());\n  const [isLoading, setIsLoading] = useState(false);\n\n  const getImgInfo = async () => {\n    try {\n      setIsLoading(true);\n      await getImageById(imgId).then(data => {\n        setImgData(new ImageModel(data));\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const onAddComment = (comment) => {\n    const newCommentWithDate = new CommentModel({...comment, date: Date.now()});\n    setImgData({...imgData, comments: [...imgData.comments, newCommentWithDate]});\n  };\n\n  return (\n    <Modal\n      show={show}\n      onHide={onHide}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      onShow={getImgInfo}\n      centered\n    >\n      <CloseIcon onIconClick={onHide}/>\n      <Modal.Body>\n        <Row>\n          <ImageModalCol xs={12} md={7}>\n            <ImageModalDiv>\n              {isLoading ?\n                <Spinner animation=\"border\" role=\"status\">\n                  <span className=\"sr-only\">Loading...</span>\n                </Spinner> :\n                <Image src={imgData.url} fluid/>\n              }\n            </ImageModalDiv>\n          </ImageModalCol>\n          <ImageModalCol xs={12} md={5}>\n            <CommentsList comments={imgData.comments}/>\n          </ImageModalCol>\n          <ImageModalCol xs={12} md={7}>\n            <CommentForm imgId={imgId} onAddComment={onAddComment}/>\n          </ImageModalCol>\n\n        </Row>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nImageModal.propTypes = {\n  onHide: PropTypes.func.isRequired,\n  show: PropTypes.bool.isRequired,\n  imgId: PropTypes.number.isRequired\n};\n\nexport default ImageModal;\n","import React, {useEffect, useState} from 'react';\nimport ImageCard from '../components/ImageCard';\nimport {getImages} from '../api/httpRequests';\nimport {Col, Container, Row} from 'react-bootstrap';\nimport ImageModal from '../components/ImageModal';\n\nconst GalleryPage = () => {\n  const [imgList, setImgList] = useState([]);\n  const [modalShow, setModalShow] = useState(false);\n  const [imgId, setImgId] = useState(null);\n\n  useEffect(() => {\n    getImages().then(data => setImgList(data));\n  }, []);\n\n  const setModal = (imgId) => {\n    setModalShow(true);\n    setImgId(imgId);\n  };\n\n  return (\n    <div>\n      <Container>\n        <Row>\n          {imgList.map((img) => (\n            <Col xs={12} md={6} lg={4} xl={4} key={img.id}>\n              <ImageCard url={img.url} showModal={() => setModal(img.id)}/>\n            </Col>)\n          )}\n        </Row>\n      </Container>\n      {imgId && <ImageModal show={modalShow} imgId={imgId} onHide={() => setModalShow(false)}/>}\n    </div>\n  );\n};\n\nGalleryPage.propTypes = {};\n\nexport default GalleryPage;\n","import './App.scss';\nimport Header from './components/particials/Header';\nimport Footer from './components/particials/Footer';\nimport styled from 'styled-components';\nimport GalleryPage from './pages/GalleryPage';\n\n\nconst StyledDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n`;\n\nfunction App() {\n  return (\n    <StyledDiv className=\"App\">\n      <Header/>\n      <main>\n        <GalleryPage/>\n      </main>\n      <Footer/>\n    </StyledDiv>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}